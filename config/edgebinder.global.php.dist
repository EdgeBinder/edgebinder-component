<?php

declare(strict_types=1);

/**
 * EdgeBinder Configuration Template
 * 
 * Copy this file to your application's config/autoload/ directory and rename it to:
 * - edgebinder.global.php (for global configuration)
 * - edgebinder.local.php (for environment-specific configuration)
 * 
 * Then customize the configuration according to your needs.
 */

return [
    'edgebinder' => [
        // Basic single instance configuration
        // For testing and development (no external dependencies)
        'adapter' => 'inmemory',

        // For production with Weaviate (requires edgebinder/weaviate-adapter)
        /*
        'adapter' => 'weaviate',
        'weaviate_client' => 'weaviate.client.default',
        'collection_name' => 'EdgeBindings',
        'schema' => [
            'auto_create' => true,
            'vectorizer' => 'text2vec-openai',
        ],
        */

        // Multiple instance configuration (uncomment and customize as needed)
        /*
        // Testing instance
        'test' => [
            'adapter' => 'inmemory',
        ],

        // RAG system (requires edgebinder/weaviate-adapter)
        'rag' => [
            'adapter' => 'weaviate',
            'weaviate_client' => 'weaviate.client.rag',
            'collection_name' => 'RAGBindings',
            'schema' => [
                'auto_create' => true,
                'vectorizer' => 'text2vec-openai',
            ],
        ],
        // Analytics system (requires edgebinder/janus-adapter)
        'analytics' => [
            'adapter' => 'janus',
            'janus_client' => 'janus.client.analytics',
            'graph_name' => 'AnalyticsGraph',
            'consistency_level' => 'eventual',
        ],

        // Cache system (requires edgebinder/redis-adapter)
        'cache' => [
            'adapter' => 'redis',
            'redis_client' => 'redis.client.cache',
            'ttl' => 3600,
            'prefix' => 'edgebinder:',
        ],
        */

        // Custom adapter configuration example
        /*
        'custom_instance' => [
            'adapter' => 'custom',  // Requires custom adapter to be registered with AdapterRegistry
            'custom_client' => 'custom.client.service',
            'custom_config' => [
                'setting1' => 'value1',
                'setting2' => 'value2',
            ],
        ],
        */
    ],
];
